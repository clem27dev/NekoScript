
const Discord = require('discord.js');
const { MessageEmbed } = Discord;

class DiscordNeko {
  constructor(options = {}) {
    this.client = new Discord.Client({
      intents: [
        'GUILDS',
        'GUILD_MESSAGES',
        'GUILD_MEMBERS',
        'GUILD_PRESENCES',
        'GUILD_MESSAGE_REACTIONS'
      ]
    });
    this.commands = new Map();
    this.prefix = options.prefix || '!';
  }

  nekConnexion(token) {
    this.client.login(token);
    
    this.client.on('ready', () => {
      console.log(`🐱 Bot ${this.client.user.tag} connecté!`);
    });

    this.client.on('messageCreate', (message) => {
      if (!message.content.startsWith(this.prefix) || message.author.bot) return;
      
      const args = message.content.slice(this.prefix.length).trim().split(/ +/);
      const commandName = args.shift().toLowerCase();
      
      if (this.commands.has(commandName)) {
        const cmd = this.commands.get(commandName);
        try {
          cmd.execute(message, args);
        } catch (error) {
          console.error(error);
          message.reply('Une erreur est survenue!');
        }
      }
    });
  }

  nekCommande(nom, description, execute) {
    this.commands.set(nom, {
      name: nom,
      description: description,
      execute: execute
    });
  }

  nekEmbed() {
    return new MessageEmbed()
      .setColor('#0099ff');
  }

  nekReaction(message, emoji) {
    message.react(emoji);
  }

  nekEnvoiMessage(channel, contenu) {
    return channel.send(contenu);
  }

  nekEnvoiEmbed(channel, embed) {
    return channel.send({ embeds: [embed] });
  }

  nekRole(guild, name, color) {
    return guild.roles.create({
      name: name,
      color: color,
    });
  }

  nekSupprimerMessage(message) {
    return message.delete();
  }

  nekMembre(guild, userId) {
    return guild.members.fetch(userId);
  }

  nekBanir(member, reason) {
    return member.ban({ reason });
  }

  nekExpulser(member, reason) {
    return member.kick(reason);
  }

  nekChangerPresence(type, name) {
    this.client.user.setPresence({
      activities: [{ name, type }],
      status: 'online'
    });
  }

  nekChangerNom(guild, nickname) {
    return guild.me.setNickname(nickname);
  }
}

module.exports = DiscordNeko;
